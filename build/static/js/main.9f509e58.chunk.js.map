{"version":3,"sources":["utils/axios.js","utils/config.js","utils/fetchFundData.js","pages/fund/list.js","pages/fund/data.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","interceptors","request","use","config","error","Promise","reject","response","baseURL","fundCodes","fundInvote","FCCFE","FCCCB","FundUtils","this","data","JSON","parse","match","console","_config","FundConfig","then","res","dealJsonp","call","code","url","method","params","rt","Date","getTime","version","plat","appType","FCODE","onFundCache","keeeeeyparam","deviceid","igggggnoreburst","product","MobileKey","codes","pageIndex","pageSize","Version","Fcodes","join","getIncome","income","unit","className","FundList","props","funds","map","fund","key","GSZZL","JZGSSY","JZQRSY","SHORTNAME","openMarketTime","dayjs","format","closeMarketTime","funDataComponent","state","refreshTime","funListData","utils","getFundListData","fundListData","dealData","Datas","JZQRZSY","JZGSZSY","QRZSY","setState","fundData","_","orderBy","obj","currentInvote","CCSY","NAV","NAVCHGRT","GSZ","PDATE","indexOf","mathjs","Number","isAfter","timer","setInterval","clearInterval","clearTimer","setTimer","React","Component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"2VAEAA,IAAMC,aAAaC,QAAQC,KAAI,SAAUC,GAErC,OAAOA,KACR,SAAUC,GAET,OAAOC,QAAQC,OAAOF,MAI1BL,IAAMC,aAAaO,SAASL,KAAI,SAAUK,GACtC,OAAOA,KACR,SAAUH,GAET,OAAOC,QAAQC,OAAOF,MAGXL,QAAf,ECmGe,GACXS,QAAS,oCACTC,UAnHc,CACd,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UA6FAC,WAtFe,CACf,SAAU,CACNC,MAAO,OACPC,MAAO,QAEX,SAAU,CACND,MAAO,QACPC,MAAO,OAEX,OAAU,CACND,MAAO,SACPC,MAAO,MAEX,SAAU,CACND,MAAO,QACPC,MAAO,OAEX,OAAU,CACND,MAAO,OACPC,MAAO,SAEX,SAAU,CACND,MAAO,QACPC,MAAO,SAEX,OAAU,CACND,MAAO,QACPC,MAAO,SAEX,OAAU,CACND,MAAO,OACPC,MAAO,SAEX,OAAU,CACND,MAAO,QACPC,MAAO,QAAU,SAErB,OAAU,CACND,MAAO,OACPC,MAAO,SAEX,SAAU,CACND,MAAO,QACPC,MAAO,OAEX,SAAU,CACND,MAAO,QACPC,MAAO,SAEX,SAAU,CACND,MAAO,QACPC,MAAO,SAEX,SAAU,CACND,MAAO,QACPC,MAAO,SAEX,SAAU,CACND,MAAO,QACPC,MAAO,SAEX,OAAU,CACND,MAAO,QACPC,MAAO,QAEX,SAAU,CACND,MAAO,OACPC,MAAO,SAEX,SAAU,CACND,MAAO,OACPC,MAAO,MAEX,SAAU,CACND,MAAO,QACPC,MAAO,OAEX,OAAU,CACND,MAAO,QACPC,MAAO,UCpGMC,E,WACjB,WAAYV,GAAS,oBACjBW,KAAKX,OAASA,E,wDAGQ,IAAD,yDAAJ,GAATY,EAAa,EAAbA,KACR,GAAoB,kBAATA,EAAmB,OAAOA,EACrC,IACI,OAAOC,KAAKC,MAAMF,EAAKG,MAAM,mBAAoB,IAAI,IACvD,MAAOd,GAEL,OADAe,QAAQf,MAAMA,GACP,M,4BAITD,GAAS,IAAD,OACJiB,EAAO,2BACNjB,GADM,IAETK,QAASa,EAAWb,UAExB,OAAOT,EAAMqB,GAASE,MAAK,SAACC,GACxB,OAAO,EAAKC,UAAUC,KAAK,EAAMF,Q,yCAetBG,GACf,OAAOZ,KAAKf,MAAL,2BACAe,KAAKX,QADL,IAEHwB,IAAI,OAAD,OAASD,EAAT,QACHE,OAAQ,MACRC,OAAQ,CACJC,IAAI,IAAIC,MAAOC,gB,sCAKX7B,GACZ,OAAOJ,EAAMI,K,kCAELuB,GACR,OAAOZ,KAAKf,MAAL,2BACAe,KAAKX,QADL,IAEHwB,IAAK,uCACLE,OAAQ,CACJI,QAAS,MACTC,KAAM,UACNC,QAAS,OACTC,MAAOV,EACPW,YAAa,EACbC,aAAc,QACdC,SAAU,wDACVC,iBAAiB,EACjBC,QAAS,QACTC,UAAW,8D,sCAIPC,GACZ,OAAO7B,KAAKf,MAAL,2BACAe,KAAKX,QADL,IAEHwB,IAAK,2BACLE,OAAQ,CACJe,UAAW,EACXC,SAAU,IACVV,QAAS,OACTM,QAAS,QACTP,KAAM,UACNK,SAAU,2BACVO,QAAS,EACTC,OAAQJ,GAAStB,EAAWZ,UAAUuC,KAAK,a,KC3F3D,SAASC,EAAUC,EAAQC,GACvB,OAAID,EAAS,EACF,0BAAME,UAAU,+BAAhB,IAAgDF,EAAQC,GACxDD,EAAS,EACT,0BAAME,UAAU,+BAA+BF,EAAQC,GAEvD,0BAAMC,UAAU,eAAhB,QA6BAC,MAzBf,SAAkBC,GAAQ,IACdC,EAAUD,EAAVC,MACR,OACI,6BACI,yBAAKH,UAAU,eACX,2BACA,0BAAMA,UAAU,eAAhB,sBADA,KAEA,0BAAMA,UAAU,eAAhB,wCAFA,KAGA,0BAAMA,UAAU,eAAhB,wCAHA,OAMHG,EAAMC,KAAI,SAAAC,GACP,OAAO,yBAAKL,UAAU,GAAGM,IAAKD,EAAKrB,OAC/B,2BACKa,EAAUQ,EAAKE,MAAO,KAD3B,KAEKV,EAAUQ,EAAKG,QAFpB,KAGKX,EAAUQ,EAAKI,QAHpB,KAII,0BAAMT,UAAU,aAAaK,EAAKK,UAAlC,IAA8CL,EAAKrB,MAAnD,Y,0CCpBlB2B,EAAc,UAAMC,MAAQC,OAAO,cAArB,YAEdC,EAAe,UAAMF,MAAQC,OAAO,cAArB,aA2HNE,E,kDAxHX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IACDc,MAAQ,CACTC,YAAa,GACbC,YAAa,IAJF,E,0MASYxD,KAAKyD,MAAMC,kB,OAAhCC,E,OACAJ,EAAcL,MAAQC,OAAO,uB,EAM/BnD,KAAK4D,SAASD,EAAaE,MAAON,GAJlCtD,E,EAAAA,KACA6D,E,EAAAA,QACAC,E,EAAAA,QACAC,E,EAAAA,MAGJhE,KAAKiE,SAAS,CACVV,cACAW,SAAU,CACNJ,UACAC,UACAC,SAEJR,YAAaW,IAAEC,QAAQnE,GAAQ,GAAI,QAAS,U,uIAIjB,IAA1BwC,EAAyB,uDAAjB,GAAIc,EAAa,uCACtB3D,EAAeP,EAAfO,WACFyE,EAAM,CACRP,QAAS,EACTC,QAAS,EACTC,MAAO,GAoCX,OAlCAK,EAAIpE,KAAOwC,EAAMC,KAAI,SAAAC,GACjB,IAAM2B,EAAgB1E,EAAW+C,EAAKrB,OAElCwB,EAAS,GAETC,EAAS,GAETwB,EAAO,GAEX,GAAID,EAAe,CAAC,IACRzE,EAAiByE,EAAjBzE,MAAOC,EAAUwE,EAAVxE,MACP0E,EAAqC7B,EAArC6B,IAAKC,EAAgC9B,EAAhC8B,SAAUC,EAAsB/B,EAAtB+B,IAAK7B,EAAiBF,EAAjBE,MAAO8B,EAAUhC,EAAVgC,MAGA,IAA/BpB,EAAYqB,QAAQD,KACpB5B,EAAS8B,IAAaJ,EAAWD,EAAM3E,EAAQ,IAAK,IAExDiD,EAAS+B,IAAaH,EAAM7B,EAAQhD,EAAQ,IAAK,GACjD0E,EAAOM,IAAaH,EAAM7E,EAAQC,EAAO,GACzCuE,EAAIP,SAAWgB,OAAO/B,GACtBsB,EAAIN,SAAWe,OAAOhC,GACtBuB,EAAIL,OAASc,OAAOP,GAGxB,OAAO,2BACA5B,GADP,IAEIG,SACAC,SACAwB,YAGRF,EAAIP,QAAUe,IAAaR,EAAIP,QAAS,GACxCO,EAAIN,QAAUc,IAAaR,EAAIN,QAAS,GACxCM,EAAIL,MAAQa,IAAaR,EAAIL,MAAO,GAC7BK,I,iCAGC,IAAD,OACPrE,KAAK0D,kBADE,IAICH,EAAgBvD,KAAKsD,MAArBC,YACcL,IAAME,GAAiB2B,QAAQxB,IAAgBL,IAAMK,GAAawB,QAAQ9B,KAEhGjD,KAAKgF,MAAQC,aAAY,WACrB,EAAKvB,oBACN,Q,mCAIH1D,KAAKgF,OAASE,cAAclF,KAAKgF,S,oCAIjChF,KAAKmF,aACLnF,KAAKoF,a,0CAILpF,KAAKyD,MAAQ,IAAI1D,EACjBC,KAAKoF,a,6CAILpF,KAAKmF,e,+BAGC,IAAD,EAKDnF,KAAKsD,MALJ,IAEDE,mBAFC,MAEa,GAFb,MAGDU,gBAHC,MAGU,GAHV,EAIDX,EAJC,EAIDA,YAEJ,OAAO,6BACH,uBAAGjB,UAAU,eAAb,qBAA+BiB,GAC/B,wDAAUW,EAASF,OACnB,8EAAYE,EAASJ,SACrB,8EAAYI,EAASH,SACrB,kBAAC,EAAD,CAAUtB,MAAOe,S,GAnHE6B,IAAMC,W,MCsBtBC,MATf,WACE,OACE,yBAAKjD,UAAU,WAEb,kBAAC,EAAD,QClBckD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvF,MACvB,2DCZNwF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3F,MAAK,SAAA4F,GACJA,EAAaC,gBAEdC,OAAM,SAAAhH,GACLe,QAAQf,MAAMA,EAAMiH,c","file":"static/js/main.9f509e58.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    return config;\n}, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nexport default axios;","/**\n * 基金数据\n */\n\nconst fundCodes = [\n    '001679',\n    '320007',\n    '001102',\n    '001071',\n    '005963',\n    '161028',\n    '005827',\n    '161005',\n    '519712',\n    '008086',\n    '519674',\n    '000478',\n    '004069',\n    '001552',\n    '009329',\n    '003095',\n    '002510',\n    '519727',\n    '002656',\n    '007300',\n    '161725',\n    '001694',\n    '163406'\n];\n/**\n * FCCFE: 持仓份额\n * FCCCB: 持仓成本\n */\n\nconst fundInvote = {\n    '000478': {\n        FCCFE: 2359.50,\n        FCCCB: 5421.5\n    },\n    '001679': {\n        FCCFE: 6129.84,\n        FCCCB: 10300\n    },\n    '161028': {\n        FCCFE: 10613.24,\n        FCCCB: 12000\n    },\n    '001102': {\n        FCCFE: 3570.04,\n        FCCCB: 11100\n    },\n    '519712': {\n        FCCFE: 1848.70,\n        FCCCB: 6156.96\n    },\n    '005827': {\n        FCCFE: 2950.01,\n        FCCCB: 6840.11\n    },\n    '161005': {\n        FCCFE: 1922.35,\n        FCCCB: 6294.62\n    },\n    '519674': {\n        FCCFE: 733.16,\n        FCCCB: 3669.31\n    },\n    '161725': {\n        FCCFE: 3657.24,\n        FCCCB: 4868.88 - 1213.41\n    },\n    '163406': {\n        FCCFE: 920.31,\n        FCCCB: 1788.53 - 45.54\n    },\n    '002510': {\n        FCCFE: 9106.87,\n        FCCCB: 14658.24 - 358.24\n    },\n    '003095': {\n        FCCFE: 2392.26,\n        FCCCB: 8021.01 - 711.34\n    },\n    '002656': {\n        FCCFE: 7141.93,\n        FCCCB: 10118.70 - 750.93\n    },\n    '004069': {\n        FCCFE: 7865.48,\n        FCCCB: 9770.61 + 87.83\n    },\n    '008086': {\n        FCCFE: 9307.22,\n        FCCCB: 11031.33 + 717.37\n    },\n    '320007': {\n        FCCFE: 4800.38,\n        FCCCB: 8380.66 + 185.64\n    },\n    '001552': {\n        FCCFE: 4780.90,\n        FCCCB: 5437.95 - 51.08\n    },\n    '007300': {\n        FCCFE: 4136.30,\n        FCCCB: 8567.93 + 382.07\n    },\n    '009329': {\n        FCCFE: 8437.19,\n        FCCCB: 13486.85 - 1986.85\n    },\n    '519727': {\n        FCCFE: 2864.02,\n        FCCCB: 6979.62 - 762.02\n    }\n};\n\nexport default {\n    baseURL: 'https://fundmobapi.eastmoney.com/',\n    fundCodes,\n    fundInvote\n};","/**\n * \n * 接口文档：https://www.doctorxiong.club/api/#api-Fund-fund\n * 天天基金：http://fundgz.1234567.com.cn/\n * 对基金数据再次封装\n * 1.对天天基金数据的jsonp格式进行处理\n * 2.对某些数据进行缓存：如资金交易记录等\n * \n */\n\nimport axios from './axios';\nimport FundConfig from './config';\n\nexport default class FundUtils {\n    constructor(config) {\n        this.config = config;\n    }\n\n    dealJsonp({ data } = {}) {\n        if (typeof data === 'object') return data;\n        try {\n            return JSON.parse(data.match(/^jsonpgz\\((.*)\\)/, '')[1]);\n        } catch (error) {\n            console.error(error);\n            return {};\n        }\n    }\n\n    axios(config) {\n        const _config = {\n            ...config,\n            baseURL: FundConfig.baseURL\n        };\n        return axios(_config).then((res) => {\n            return this.dealJsonp.call(this, res);\n        });\n    }\n\n    /**\n     * \n     * 获取基金实时数据\n     * @returns funcode 基金代码\n     * @returns name 基金名称\n     * @returns jzrq 净值日期\n     * @returns dwjz 当日净值\n     * @returns gsz 估算(净)值\n     * @returns gszzl 估算(净)值涨幅百分比\n     * @returns gztime 估值时间\n     */\n    getFundCurrentData(code) {\n        return this.axios({\n            ...this.config,\n            url: `/js/${code}.js?`,\n            method: 'GET',\n            params: {\n                rt: new Date().getTime(),\n            },\n        });\n    }\n\n    getFundLastData(config) {\n        return axios(config);\n    }\n    getFundData(code) {\n        return this.axios({\n            ...this.config,\n            url: '/FundMNewApi/FundMNNBasicInformation',\n            params: {\n                version: '6.2',\n                plat: 'Android',\n                appType: 'ttjj',\n                FCODE: code,\n                onFundCache: 3,\n                keeeeeyparam: 'FCODE',\n                deviceid: '656c09923c567b89bb44801020bc59ab%7C%7Ciemi_tluafed_me',\n                igggggnoreburst: true,\n                product: 'EFund',\n                MobileKey: '656c09923c567b89bb44801020bc59ab%7C%7Ciemi_tluafed_me'\n            }\n        })\n    }\n    getFundListData(codes) {\n        return this.axios({\n            ...this.config,\n            url: '/FundMNewApi/FundMNFInfo',\n            params: {\n                pageIndex: 1,\n                pageSize: 999,\n                appType: 'ttyy',\n                product: 'EFund',\n                plat: 'Android',\n                deviceid: '9e16077fca2fcr78ep0ltn98',\n                Version: 1,\n                Fcodes: codes || FundConfig.fundCodes.join(',')\n            }\n        })\n    }\n}","import React from 'react';\n\nfunction getIncome(income, unit) {\n    if (income > 0) {\n        return <span className=\"income-rate positive-income\">+{income}{unit}</span>;\n    } else if (income < 0) {\n        return <span className=\"income-rate negative-income\">{income}{unit}</span>;\n    } else {\n        return <span className=\"income-rate\">0.00</span>;\n    }\n}\n\nfunction FundList(props) {\n    const { funds } = props;\n    return (\n        <div>\n            <div className=\"list-header\">\n                <p>\n                <span className=\"income-rate\">收益率</span> | \n                <span className=\"income-rate\">今日预估收益</span> | \n                <span className=\"income-rate\">今日确认收益</span> | \n                </p>\n            </div>\n            {funds.map(fund => {\n                return <div className=\"\" key={fund.FCODE}>\n                    <p>\n                        {getIncome(fund.GSZZL, '%')} | \n                        {getIncome(fund.JZGSSY)} |\n                        {getIncome(fund.JZQRSY)} |\n                        <span className=\"fund-name\">{fund.SHORTNAME}({fund.FCODE})</span>\n                    </p>\n                </div>;\n            })}\n        </div>\n    );\n}\n\nexport default FundList;","import React from 'react';\nimport FundUtils from '../../utils/fetchFundData';\nimport FundList from './list';\nimport _ from 'lodash';\nimport dayjs from 'dayjs';\nimport config from '../../utils/config';\nimport * as mathjs from 'mathjs';\n\n// 开市时间\nconst openMarketTime = `${dayjs().format('YYYY-MM-DD')} 9:00:01`;\n// 收市时间\nconst closeMarketTime = `${dayjs().format('YYYY-MM-DD')} 15:00:01`;\n\nclass funDataComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            refreshTime: '',\n            funListData: []\n        };\n    }\n\n    async getFundListData() {\n        const fundListData = await this.utils.getFundListData();\n        const refreshTime = dayjs().format('YYYY-MM-DD HH:mm:ss');\n        const {\n            data,\n            JZQRZSY,\n            JZGSZSY,\n            QRZSY\n        } = this.dealData(fundListData.Datas, refreshTime);\n\n        this.setState({\n            refreshTime,\n            fundData: {\n                JZQRZSY,\n                JZGSZSY,\n                QRZSY\n            },\n            funListData: _.orderBy(data || [], 'GSZZL', 'desc')\n        });\n    }\n\n    dealData(funds = [], refreshTime) {\n        const { fundInvote } = config;\n        const obj = {\n            JZQRZSY: 0,\n            JZGSZSY: 0,\n            QRZSY: 0,\n        }\n        obj.data = funds.map(fund => {\n            const currentInvote = fundInvote[fund.FCODE];\n            // 估算实时预估收益\n            let JZGSSY = '';\n            // 今日确认收益\n            let JZQRSY = '';\n            // 确认持仓收益\n            let CCSY = '';\n\n            if (currentInvote) {\n                const { FCCFE, FCCCB } = currentInvote;\n                const { NAV, NAVCHGRT, GSZ, GSZZL, PDATE } = fund;\n                \n                // 说明今天的净值已经更新\n                if (refreshTime.indexOf(PDATE) === 0) {\n                    JZQRSY = mathjs.round(NAVCHGRT * NAV * FCCFE / 100, 2);\n                }\n                JZGSSY = mathjs.round(GSZ * GSZZL * FCCFE / 100, 2);\n                CCSY = mathjs.round(GSZ * FCCFE - FCCCB, 2);\n                obj.JZQRZSY += Number(JZQRSY);\n                obj.JZGSZSY += Number(JZGSSY);\n                obj.QRZSY += Number(CCSY);\n            }\n\n            return {\n                ...fund,\n                JZGSSY,\n                JZQRSY,\n                CCSY\n            }\n        });\n        obj.JZQRZSY = mathjs.round(obj.JZQRZSY, 2);\n        obj.JZGSZSY = mathjs.round(obj.JZGSZSY, 2);\n        obj.QRZSY = mathjs.round(obj.QRZSY, 2);\n        return obj;\n    }\n\n    setTimer() {\n        this.getFundListData();\n\n        // 不在开市时间不刷新\n        const { refreshTime } = this.state;\n        const isCloseMarket = dayjs(closeMarketTime).isAfter(refreshTime) || dayjs(refreshTime).isAfter(openMarketTime);\n        if (isCloseMarket) return;\n        this.timer = setInterval(() => {\n            this.getFundListData();\n        }, 5000);\n    }\n\n    clearTimer() {\n        this.timer && clearInterval(this.timer);\n    }\n\n    autoRefresh() {\n        this.clearTimer();\n        this.setTimer();\n    }\n\n    componentDidMount() {\n        this.utils = new FundUtils();\n        this.setTimer();\n    }\n\n    componentWillUnmount() {\n        this.clearTimer();\n    }\n\n    render() {\n        const {\n            funListData = [],\n            fundData = {},\n            refreshTime,\n        } = this.state;\n        return <div>\n            <p className=\"update-time\">时间：{refreshTime}</p>\n            <p>持仓收益: {fundData.QRZSY}</p>\n            <p>今日确认总收益：{fundData.JZQRZSY}</p>\n            <p>今日预估总收益：{fundData.JZGSZSY}</p>\n            <FundList funds={funListData}></FundList>\n        </div>;\n    }\n}\n\n\nexport default funDataComponent;","import React from 'react';\nimport FundData from './pages/fund/data';\n// import 'antd/dist/antd.css';\nimport './App.css';\n// import { Tabs } from 'antd';\n\n// const { TabPane } = Tabs;\n\n// function callback(key) {\n//   console.log(key);\n// }\n\n// const tabPages = () => (\n//   <Tabs defaultActiveKey=\"1\" onChange={callback}>\n//     <TabPane tab=\"持仓基金\" key=\"1\">\n//       <FundData />\n//     </TabPane>\n//     <TabPane tab=\"Tab 2\" key=\"2\">\n//       Content of Tab Pane 2\n//     </TabPane>\n//     <TabPane tab=\"Tab 3\" key=\"3\">\n//       Content of Tab Pane 3\n//     </TabPane>\n//   </Tabs>\n// );\n\nfunction App() {\n  return (\n    <div className=\"content\">\n      {/* {tabPages()} */}\n      <FundData />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}