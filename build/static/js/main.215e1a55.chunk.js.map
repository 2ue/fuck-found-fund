{"version":3,"sources":["pages/home/index.js","utils/axios.js","data/fund/index.js","api/eastmoney.js","pages/fund/list.js","utils/index.js","pages/fund/data.jsx","pages/quantify/index.js","router.js","pages/mark/index.js","App.js","serviceWorker.js","index.js"],"names":["Index","className","Routers","map","r","style","width","length","key","path","to","name","React","Component","axios","interceptors","request","use","config","error","Promise","reject","response","fundCodes","fundInvote","FCCFE","FCCCBDJ","PLATFORM","allFundCodes","_","uniq","Object","keys","https","baseURL","then","res","data","status","getIncome","income","unit","FundList","props","funds","onlyShowHave","showRate","updateFlag","sortList","onClick","bind","this","filter","fund","isHave","FCODE","GSZZL","JRGSSY","JRQRSYL","JRQRSY","CCSYL","CCSY","SHORTNAME","count","number","dec","mathjs","dealFundData","refreshTime","obj","ZRQRZSY","JRQRZSY","JRGSZSY","CCZSY","YGZSZ","CCZCB","updateLen","needUpdate","list","currentInvote","CCZSZ","NAV","NAVCHGRT","GSZ","PDATE","indexOf","Number","openMarketTime","dayjs","format","closeMarketTime","setInfo","window","consoleInfo","console","log","getNumber","value","type","rate","funDataComponent","state","showDetail","fundData","funListData","isCloseMarket","isAfter","timer","clearTimer","url","params","pageIndex","pageSize","appType","product","plat","deviceid","Version","Fcodes","getFundList","join","fundListData","Datas","setState","setTimer","order","_order","o","l","isEmpty","orderBy","d","setTimeout","NProgress","start","getFundListData","done","pollingTime","clearInterval","alert","fundLen","ZSYL","printAll","swtichNumber","arr","getUpdateFlag","changeShowDetail","changeShowHave","headers","keepFundList","lostFundList","newFundList","renderTd","component","Fund","h","colSpan","f","code","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.215e1a55.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Routers from '../../router';\n\n\nfunction getStyles() {\n  return {\n    width: `${(100 / Routers.length)}%`\n  }\n}\n\nexport default class Index extends React.Component {\n  render() {\n    return (\n      <div className=\"home-container\">\n        <ul className=\"menu\">\n          {\n            Routers.map(r => <li style={getStyles()} key={r.path}><Link to={r.path}>{r.name}</Link></li>)\n          }\n        </ul>\n      </div>\n    )\n  }\n};\n","import axios from 'axios';\n\naxios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    return config;\n}, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nexport default axios;","/**\n * 需要展示的基金列表CODE\n */\nexport const fundCodes = [\n    '001679',\n    '320007',\n    '001102',\n    '001071',\n    '005963',\n    '161028',\n    '005827',\n    '161005',\n    '519712',\n    '008086',\n    '519674',\n    '000478',\n    '004069',\n    '001552',\n    '009329',\n    '003095',\n    '002510',\n    '519727',\n    '002656',\n    '007300',\n    '161725',\n    '001694',\n    '163406',\n    '001156',\n    '162605'\n];\n\n/**\n * 持仓数据\n * FCCFE: 持仓份额\n * FCCCB: 持仓成本\n * FCCCBDJ: 持仓成本单价\n * PLATFORM: 平台简称\n */\nexport const fundInvote = {\n    '001679': {\n        FCCFE: 6783.15,\n        FCCCBDJ: 1.8281,\n        PLATFORM: 'JD'\n    },\n    '001102': {\n        FCCFE: 5056.60,\n        FCCCBDJ: 3.4064,\n        PLATFORM: 'TTJJ'\n    },\n    '001156': {\n        FCCFE: 8128.31,\n        FCCCBDJ: 2.5337,\n        PLATFORM: 'TTJJ'\n    },\n    '005969': {\n        FCCFE: 3112.99,\n        FCCCBDJ: 3.2834,\n        PLATFORM: 'TTJJ'\n    },\n    '005827': {\n        FCCFE: 4975.77,\n        FCCCBDJ: 2.6273,\n        PLATFORM: 'TTJJ'\n    },\n    '161005': {\n        FCCFE: 2738.66,\n        FCCCBDJ: 3.2479,\n        PLATFORM: 'TTJJ'\n    },\n    '161725': {\n        FCCFE: 9963.58,\n        FCCCBDJ: 1.2814,\n        PLATFORM: 'MYCF'\n    },\n    '163406': {\n        FCCFE: 7216.12,\n        FCCCBDJ: 2.0728,\n        PLATFORM: 'MYCF'\n    },\n    '162605': {\n        FCCFE: 5177.59,\n        FCCCBDJ: 3.6346,\n        PLATFORM: 'MYCF'\n    },\n    '005911': {\n        FCCFE: 959.56,\n        FCCCBDJ: 3.4912,\n        PLATFORM: 'MYCF'\n    },\n    '003095': {\n        FCCFE: 4185.51,\n        FCCCBDJ: 3.2482,\n        PLATFORM: 'MYCF'\n    },\n    '001875': {\n        FCCFE: 3306.25,\n        FCCCBDJ: 2.8129,\n        PLATFORM: 'MYCF'\n    },\n    '001837': {\n        FCCFE: 565.83,\n        FCCCBDJ: 2.2595,\n        PLATFORM: 'MYCF'\n    },\n    '002656': {\n        FCCFE: 9543.07,\n        FCCCBDJ: 1.3444,\n        PLATFORM: 'MYCF'\n    },\n    '004069': {\n        FCCFE: 11028.47,\n        FCCCBDJ: 1.2418,\n        PLATFORM: 'MYCF'\n    },\n    '008086': {\n        FCCFE: 8840.87,\n        FCCCBDJ: 1.2414,\n        PLATFORM: 'MYCF'\n    },\n    '007300': {\n        FCCFE: 4441.96,\n        FCCCBDJ: 2.1547,\n        PLATFORM: 'MYCF'\n    },\n    '009329': {\n        FCCFE: 10094.45,\n        FCCCBDJ: 1.4315,\n        PLATFORM: 'MYCF'\n    },\n    '519727': {\n        FCCFE: 3761.86,\n        FCCCBDJ: 2.2908,\n        PLATFORM: 'MYCF'\n    },\n};\n","/**\n * 基于https://fundmobapi.eastmoney.com的接口\n */\n\nimport axios from '../utils/axios';\nimport _ from 'lodash';\nimport { fundCodes, fundInvote } from '../data/fund/index';\n\nconst allFundCodes = (() => {\n    return _.uniq([\n        ...Object.keys(fundInvote),\n        ...fundCodes\n    ]);\n})();\n\nfunction https(config) {\n    return axios({\n        ...config,\n        baseURL: 'https://fundmobapi.eastmoney.com/'\n    }).then(res => {\n        const { data, status } = res;\n        if (status === 200) return data;\n    });\n}\n\n/**\n * 获取基金历史净值\n * @param {String|Number} code 基金代码\n * \n * @returns FCODE 基金代码\n * @returns SHORTNAME 基金名称\n * @returns PDATE 最新确认净值日期\n * @returns NAV 最新确认净值\n * @returns NAVCHGRT 最新确认净值涨跌比率\n * @returns GSZ 实时估算净值\n * @returns GSZZL 实时估算净值涨跌比率\n * @returns GZTIME 时间估算时间\n */\nexport function getFund(code) {\n    return https({\n        url: '/FundMNewApi/FundMNNBasicInformation',\n        params: {\n            version: '6.2',\n            plat: 'Android',\n            appType: 'ttjj',\n            FCODE: code,\n            onFundCache: 3,\n            keeeeeyparam: 'FCODE',\n            deviceid: '656c09923c567b89bb44801020bc59ab%7C%7Ciemi_tluafed_me',\n            igggggnoreburst: true,\n            product: 'EFund',\n            MobileKey: '656c09923c567b89bb44801020bc59ab%7C%7Ciemi_tluafed_me'\n        }\n    });\n}\n\n/**\n * 批量获取基金实时数据\n * @param {Array} codes 基金代码\n * \n * @returns FCODE 基金代码\n * @returns SHORTNAME 基金名称\n * @returns PDATE 最新确认净值日期\n * @returns NAV 最新确认净值\n * @returns NAVCHGRT 最新确认净值涨跌比率\n * @returns GSZ 实时估算净值\n * @returns GSZZL 实时估算净值涨跌比率\n * @returns GZTIME 时间估算时间\n */\nexport function getFundList(codes) {\n    return https({\n        url: '/FundMNewApi/FundMNFInfo',\n        params: {\n            pageIndex: 1,\n            pageSize: 999,\n            appType: 'ttyy',\n            product: 'EFund',\n            plat: 'Android',\n            deviceid: '9e16077fca2fcr78ep0ltn98',\n            Version: 1,\n            Fcodes: codes || allFundCodes.join(',')\n        }\n    });\n}\n","import React from 'react';\n\nfunction getIncome(income, unit) {\n    if (income > 0) {\n        return <span className=\"income-rate positive-income\">+{income}{unit}</span>;\n    } else if (income < 0) {\n        return <span className=\"income-rate negative-income\">{income}{unit}</span>;\n    } else {\n        return <span className=\"income-rate\">0.00</span>;\n    }\n}\n\nfunction FundList(props) {\n    const { funds, onlyShowHave, showRate, updateFlag, sortList } = props;\n    return (\n        <div className=\"list-container\">\n            <div className=\"list-content\">\n                <div className=\"list-header\">\n                    <p>\n                        <span className=\"income-rate\" onClick={sortList.bind(this, null, 'GSZZL')}>今日预估收益率</span>\n                        {!showRate ? <span className=\"income-rate\" onClick={sortList.bind(this, null, 'JRGSSY')}>今日预估收益</span> : ''}\n                        {updateFlag !== -1 ? <span className=\"income-rate\" onClick={sortList.bind(this, null, 'JRQRSYL')}>今日确认收益率</span> : ''}\n                        {updateFlag !== -1 && !showRate ? <span className=\"income-rate\" onClick={sortList.bind(this, null, 'JRQRSY')}>今日确认收益</span> : ''}\n                        <span className=\"income-rate\" onClick={sortList.bind(this, null, 'CCSYL')}>持仓收益率</span>\n                        {!showRate ? <span className=\"income-rate\" onClick={sortList.bind(this, null, 'CCSY')}>持仓收益</span> : ''}\n                    </p>\n                </div>\n                {funds.filter(fund => !onlyShowHave || fund.isHave).map(fund => {\n                    return <div className=\"\" key={fund.FCODE}>\n                        <p>\n                            {getIncome(fund.GSZZL, '%')}\n                            {!showRate ? getIncome(fund.JRGSSY) : ''}\n                            {updateFlag !== -1 ? getIncome(fund.JRQRSYL, '%') : ''}\n                            {updateFlag !== -1 && !showRate ? getIncome(fund.JRQRSY) : ''}\n                            {getIncome(fund.CCSYL, '%')}\n                            {!showRate ? getIncome(fund.CCSY) : ''}\n                            <span className=\"fund-name\">\n                                <label className=\"have-tag\">{fund.isHave ? '持有' : ''}</label>\n                                {fund.SHORTNAME}({fund.FCODE})\n                            </span>\n                        </p>\n                    </div>;\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default FundList;","\nimport * as mathjs from 'mathjs';\n\nexport function  count(number, dec = 2) {\n    return mathjs.round(number, dec);\n}\n\n/**\n     * 计算基金实时收益情况等\n     * @param {Array} funds 基金实时信息\n     * @param {Date|String} refreshTime 刷新基金的时间\n     * \n     * @returns {Number} ZRQRZSY 昨日确认总收益\n     * @returns {Number} JRQRZSY 今日确认总收益\n     * @returns {Number} JRGSZSY 今日估算总收益\n     * @returns {Number} CCZSY 持仓收益\n     * @returns {Array} list 基金数组\n     */\n export function dealFundData(funds = [], refreshTime, fundInvote) {\n    const obj = {\n        ZRQRZSY: 0,\n        JRQRZSY: 0,\n        JRGSZSY: 0,\n        CCZSY: 0,\n        // 预估总市值\n        YGZSZ: 0,\n        // 持仓总成本\n        CCZCB: 0,\n        updateFlag: -1\n    };\n\n    let updateLen = 0;\n    let needUpdate = 0;\n\n    obj.list = funds.map(fund => {\n        const currentInvote = fundInvote[fund.FCODE];\n        // 昨日确认总收益\n        let ZRQRZSY = 0;\n        // 实时预估收益\n        let JRGSSY = 0;\n        // 今日确认收益\n        let JRQRSY = 0;\n        // 确认持仓收益\n        let CCSY = 0;\n        // 持仓总成本: 投入的本金\n        let CCZCB = 0;\n        // 持仓总市值： CCSY+CCZCB\n        let CCZSZ = 0;\n        // 是否持仓\n        let isHave = false;\n\n        if (currentInvote) {\n            needUpdate += 1;\n            const { FCCFE, FCCCBDJ } = currentInvote;\n            const { NAV, NAVCHGRT, GSZ, GSZZL, PDATE } = fund;\n            \n            isHave = true;\n            CCZCB = count(FCCCBDJ * FCCFE);\n            CCZSZ = count(NAV * FCCFE);\n            // 说明今天的净值已经更新\n            if (refreshTime.indexOf(PDATE) === 0 && Number(NAVCHGRT) && Number(NAV)) {\n                updateLen += 1;\n                JRQRSY = count(NAVCHGRT * CCZSZ / 100);\n            } else {\n                ZRQRZSY = count(NAVCHGRT * CCZSZ / 100);\n            }\n            JRGSSY = count(GSZ * GSZZL * FCCFE / 100);\n            CCSY = count(CCZSZ - CCZCB) || 0;\n            obj.ZRQRZSY += Number(ZRQRZSY);\n            obj.JRQRZSY += Number(JRQRSY);\n            obj.JRGSZSY += Number(JRGSSY);\n            obj.CCZSY += Number(CCSY);\n            obj.YGZSZ = count(obj.YGZSZ + CCZSZ);\n            obj.CCZCB = count(obj.CCZCB + CCZCB);\n        }\n        return {\n            ...fund,\n            JRGSSY,\n            JRQRSY,\n            JRQRSYL: count(JRQRSY / CCZSZ * 100),\n            CCSY,\n            CCSYL: count(CCSY / CCZCB * 100),\n            CCZCB,\n            CCZSZ,\n            isHave\n        };\n    });\n    if (updateLen === 0) {\n        obj.updateFlag = -1;\n    } else if (updateLen === needUpdate) {\n        obj.updateFlag = 1;\n    } else {\n        obj.updateFlag = 0;\n    }\n    obj.ZRQRZSY = count(obj.ZRQRZSY);\n    obj.JRQRZSY = count(obj.JRQRZSY);\n    obj.JRGSZSY = count(obj.JRGSZSY);\n    obj.CCZSY = count(obj.CCZSY);\n    return obj;\n}","import React from 'react';\nimport _ from 'lodash';\nimport dayjs from 'dayjs';\nimport NProgress from 'nprogress';\nimport { getFundList } from '../../api/eastmoney';\nimport { fundInvote } from '../../data/fund/index';\nimport FundList from './list';\nimport { count, dealFundData } from '../../utils';\n\n// 开市时间\nconst openMarketTime = `${dayjs().format('YYYY-MM-DD')} 9:00:01`;\n// 收市时间\nconst closeMarketTime = `${dayjs().format('YYYY-MM-DD')} 15:00:01`;\n// 轮询时间(s)\nconst pollingTime = 5;\n\nconst setInfo = (data) => {\n    window.consoleInfo = () => {\n        console.log('持仓总成本：', data.CCZCB);\n        console.log('预估总市值：', data.YGZSZ);\n    };\n};\n\nconst getUpdateFlag = (value) => {\n    const arr = ['更新中', '更新完成'];\n    if (arr[value]) {\n        return <span className=\"red\">({arr[value]})</span>;\n    } else {\n        return '';\n    }\n}\n\nfunction getNumber(value, type, data) {\n    if (type) {\n        const rate = count(value / data * 100);\n        return `${rate}%`;\n    }\n    return value;\n}\n\nclass funDataComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDetail: false,\n            onlyShowHave: true,\n            // 0，更新中，1更新完成\n            updateFlag: -1,\n            refreshTime: '',\n            fundData: [],\n            funListData: [],\n            showRate: true\n        };\n    }\n\n    /**\n     * \n     */\n    async getFundListData() {\n        const refreshTime = dayjs().format('YYYY-MM-DD HH:mm:ss');\n        // 是否开市\n        const isCloseMarket = dayjs(refreshTime).isAfter(closeMarketTime) || dayjs(openMarketTime).isAfter(refreshTime);\n        \n        // 不在开市时间不刷新\n        if (this.timer && isCloseMarket) {\n            this.clearTimer();\n            return;\n        }\n\n        const fundListData = await getFundList();\n        const data = dealFundData(fundListData.Datas, refreshTime, fundInvote);\n        const {\n            list,\n            updateFlag,\n            ...fundData\n        } = data;\n        setInfo(data);\n\n        this.setState({\n            updateFlag,\n            refreshTime,\n            fundData\n        });\n        this.sortList(list, 'GSZZL', this.state.GSZZL || 'desc');\n        this.setTimer();\n    }\n    sortList(list, key, order) {\n        const _order = this.state[key];\n        const o =  order || (_order === 'desc' ? 'asc' : 'desc');\n        let l = list;\n        if (_.isEmpty(l)) {\n            l = this.state.funListData;\n        }\n        this.setState({\n            [key]: o,\n            funListData: _.orderBy(l || [], d => (Number(d[key]) + 100000), o)\n        });\n    }\n\n    // 定时请求\n    setTimer() {\n        this.timer = setTimeout(() => {\n            NProgress.start();\n            this.getFundListData();\n            NProgress.done();\n        }, pollingTime * 1000);\n    }\n\n    // 清除定时器\n    clearTimer() {\n        this.timer && clearInterval(this.timer);\n    }\n\n    // 重置定时器：一般用于手动刷新场景\n    resetTimer() {\n        this.clearTimer();\n        this.setTimer();\n    }\n\n    componentDidMount() {\n        this.getFundListData();\n    }\n\n    componentWillUnmount() {\n        this.clearTimer();\n    }\n\n    changeShowHave() {\n        this.setState({\n            onlyShowHave: !this.state.onlyShowHave\n        });\n    }\n\n    changeShowDetail() {\n        this.setState({\n            showDetail: !this.state.showDetail\n        });\n    }\n    printAll() {\n        const {\n            CCZCB,\n            YGZSZ\n        } = this.state.fundData;\n        window.consoleInfo();\n        window.alert(`持仓总成本：${CCZCB}<br/>预估总市值：${YGZSZ}`);\n    }\n    \n    swtichNumber() {\n        this.setState({\n            showRate: !this.state.showRate\n        });\n    }\n\n    render() {\n        const {\n            funListData = [],\n            fundData = {},\n            refreshTime,\n            onlyShowHave,\n            updateFlag,\n            showDetail,\n            showRate\n        } = this.state;\n        const {\n            CCZCB,\n            CCZSY,\n            YGZSZ,\n            ZRQRZSY,\n            JRQRZSY,\n            JRGSZSY\n        } = fundData;\n        const fundLen = Object.keys(fundInvote).length;\n\n        const ZSYL = count(CCZSY / CCZCB * 100, 2);\n\n        return <div className=\"fund-container\">\n            <button className=\"total-all\" onClick={this.printAll.bind(this)}>总计</button>\n            <button className=\"total-all swtich-number\" onClick={this.swtichNumber.bind(this)}>总计</button>\n            <p className=\"update-time\">更新时间：{refreshTime}</p>\n            <p>持仓数量：{fundLen}</p>\n            <p>持仓收益：{showRate ? `${ZSYL}%` : CCZSY}</p>\n            <p>昨日确认总收益：{getNumber(ZRQRZSY, showRate, YGZSZ)}</p>\n            <p>今日确认总收益：{getNumber(JRQRZSY, showRate, YGZSZ)}{getUpdateFlag(updateFlag)}</p>\n            <p>今日预估总收益：{getNumber(JRGSZSY, showRate, YGZSZ)}</p>\n            <div className=\"operation-container\">\n                <button onClick={this.changeShowDetail.bind(this)}>{showDetail ? '隐藏' : '显示'}详情</button>\n                <button onClick={this.changeShowHave.bind(this)}>{!onlyShowHave ? '隐藏' : '显示'}未持有</button>\n            </div>\n            {showDetail && <FundList funds={funListData} onlyShowHave={onlyShowHave} showRate={showRate} updateFlag={updateFlag} sortList={this.sortList.bind(this)}></FundList>}\n        </div>;\n    }\n}\n\n\nexport default funDataComponent;","import React from 'react';\nimport './index.css';\nimport data from '../../data/quantify/compare.json';\n\nconsole.log(data);\nconst {\n  keys,\n  headers,\n  // recentFundList,\n  // recent10FundList,\n  keepFundList,\n  lostFundList,\n  newFundList\n} = data;\n\nconst renderTd = (data) => {\n  return keys.map(key => <td key={data[key]}>{data[key]}</td>);\n}\n\nexport default class Quantify extends React.Component {\n  render() {\n    return (\n      <div className=\"quantify-container\">\n        <p>本期榜单更新：</p>\n        <br></br>\n        <table>\n          <thead>\n            <tr>\n              { headers.map(h => <td key={h.key}>{ h.name }</td>) }\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"fund-list-title\"><td colSpan={keys.length}>本期在榜基金</td></tr>\n            {\n              keepFundList.map(f => <tr key={f.code}>{renderTd(f)}</tr>)\n            }\n            <tr className=\"fund-list-title\"><td colSpan={keys.length}>落榜基金</td></tr>\n            {\n              lostFundList.map(f => <tr key={f.code}>{renderTd(f)}</tr>)\n            }\n            <tr className=\"fund-list-title\"><td colSpan={keys.length}>上榜基金</td></tr>\n            {\n              newFundList.map(f => <tr key={f.code}>{renderTd(f)}</tr>)\n            }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n};\n","import Index from './pages/home/index';\nimport Fund from './pages/fund/data';\nimport Quantify from './pages/quantify';\nimport Mark from './pages/mark';\n\nexport default [\n  {\n    name: '首页',\n    path: '/',\n    component: Index\n  },\n  {\n    name: '持仓',\n    path: '/fund',\n    component: Fund\n  },\n  {\n    name: '量化策略',\n    path: '/quantify',\n    component: Quantify\n  },\n  {\n    name: '自选',\n    path: '/mark',\n    component: Mark\n  }\n];\n","import React from 'react';\n\nexport default class Quantify extends React.Component {\n  render() {\n    return (\n      <div>\n        自选\n      </div>\n    )\n  }\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport 'nprogress/nprogress.css';\nimport Routers from './router';\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        {\n          Routers.map(r => <Route path={r.path} component={r.component} key={r.path}></Route>)\n        }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}