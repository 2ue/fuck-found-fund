{"version":3,"sources":["utils/axios.js","data/fund.js","api/eastmoney.js","pages/fund/list.js","pages/fund/data.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","interceptors","request","use","config","error","Promise","reject","response","fundCodes","fundInvote","FCCFE","FCCCBDJ","allFundCodes","_","uniq","Object","keys","https","baseURL","then","res","data","status","getIncome","income","unit","className","FundList","props","funds","onlyShowHave","filter","fund","isHave","map","key","FCODE","GSZZL","JRGSSY","JRQRSY","SHORTNAME","openMarketTime","dayjs","format","closeMarketTime","setInfo","window","consoleInfo","console","log","YGZSZ","funDataComponent","state","showDetail","updateFlag","refreshTime","fundData","funListData","isCloseMarket","isAfter","this","timer","clearTimer","url","params","pageIndex","pageSize","appType","product","plat","deviceid","Version","Fcodes","getFundList","join","fundListData","dealData","Datas","list","ZRQRZSY","JRQRZSY","JRGSZSY","CCZSY","setState","orderBy","d","Number","setTimer","obj","updateLen","needUpdate","currentInvote","CCSY","NAV","NAVCHGRT","GSZ","PDATE","indexOf","mathjs","setTimeout","NProgress","start","getFundListData","done","pollingTime","clearInterval","fundLen","length","value","arr","class","getUpdateFlag","onClick","changeShowDetail","bind","changeShowHave","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b7e66272.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use(function (config) {\r\n    // 在发送请求之前做些什么\r\n    return config;\r\n}, function (error) {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n});\r\n\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(function (response) {\r\n    return response;\r\n}, function (error) {\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default axios;","/**\r\n * 需要展示的基金列表CODE\r\n */\r\nexport const fundCodes = [\r\n    '001679',\r\n    '320007',\r\n    '001102',\r\n    '001071',\r\n    '005963',\r\n    '161028',\r\n    '005827',\r\n    '161005',\r\n    '519712',\r\n    '008086',\r\n    '519674',\r\n    '000478',\r\n    '004069',\r\n    '001552',\r\n    '009329',\r\n    '003095',\r\n    '002510',\r\n    '519727',\r\n    '002656',\r\n    '007300',\r\n    '161725',\r\n    '001694',\r\n    '163406',\r\n    '001156'\r\n];\r\n\r\n/**\r\n * 持仓数据\r\n * FCCFE: 持仓份额\r\n * FCCCB: 持仓成本\r\n * FCCCBDJ: 持仓成本单价\r\n */\r\nexport const fundInvote = {\r\n    '000478': {\r\n        FCCFE: 2359.50,\r\n        FCCCBDJ: 2.297\r\n    },\r\n    '001679': {\r\n        FCCFE: 6129.84,\r\n        FCCCBDJ: 1.664\r\n    },\r\n    '161028': {\r\n        FCCFE: 7734.35,\r\n        FCCCBDJ: 0.3674\r\n    },\r\n    '001102': {\r\n        FCCFE: 3570.04,\r\n        FCCCBDJ: 3.1093\r\n    },\r\n    '519712': {\r\n        FCCFE: 1848.70,\r\n        FCCCBDJ: 3.3305\r\n    },\r\n    '005827': {\r\n        FCCFE: 2968.30,\r\n        FCCCBDJ: 2.3213\r\n    },\r\n    '161005': {\r\n        FCCFE: 1950.93,\r\n        FCCCBDJ: 3.2778\r\n    },\r\n    '161725': {\r\n        FCCFE: 5401.44,\r\n        FCCCBDJ: 1.1775,\r\n    },\r\n    '163406': {\r\n        FCCFE: 4226.06,\r\n        FCCCBDJ: 2.0368\r\n    },\r\n    '002510': {\r\n        FCCFE: 9234.87,\r\n        FCCCBDJ: 1.5593\r\n    },\r\n    '003095': {\r\n        FCCFE: 2407.36,\r\n        FCCCBDJ: 3.0364\r\n    },\r\n    '002656': {\r\n        FCCFE: 7214.85,\r\n        FCCCBDJ: 1.2984\r\n    },\r\n    '004069': {\r\n        FCCFE: 9833.74,\r\n        FCCCBDJ: 1.2473\r\n    },\r\n    '008086': {\r\n        FCCFE: 11180.99,\r\n        FCCCBDJ: 1.245\r\n    },\r\n    '007300': {\r\n        FCCFE: 4136.30,\r\n        FCCCBDJ: 2.1638\r\n    },\r\n    '009329': {\r\n        FCCFE: 8437.19,\r\n        FCCCBDJ: 1.363\r\n    },\r\n    '519727': {\r\n        FCCFE: 2864.02,\r\n        FCCCBDJ: 2.1709\r\n    },\r\n    '001156': {\r\n        FCCFE: 4998.12,\r\n        FCCCBDJ: 2.62\r\n    },\r\n};\r\n","/**\r\n * 基于https://fundmobapi.eastmoney.com的接口\r\n */\r\n\r\nimport axios from '../utils/axios';\r\nimport _ from 'lodash';\r\nimport { fundCodes, fundInvote } from '../data/fund';\r\n\r\nconst allFundCodes = (() => {\r\n    return _.uniq([\r\n        ...Object.keys(fundInvote),\r\n        ...fundCodes\r\n    ]);\r\n})();\r\n\r\nfunction https(config) {\r\n    return axios({\r\n        ...config,\r\n        baseURL: 'https://fundmobapi.eastmoney.com/'\r\n    }).then(res => {\r\n        const { data, status } = res;\r\n        if (status === 200) return data;\r\n    });\r\n}\r\n\r\n/**\r\n * 获取基金历史净值\r\n * @param {String|Number} code 基金代码\r\n * \r\n * @returns FCODE 基金代码\r\n * @returns SHORTNAME 基金名称\r\n * @returns PDATE 最新确认净值日期\r\n * @returns NAV 最新确认净值\r\n * @returns NAVCHGRT 最新确认净值涨跌比率\r\n * @returns GSZ 实时估算净值\r\n * @returns GSZZL 实时估算净值涨跌比率\r\n * @returns GZTIME 时间估算时间\r\n */\r\nexport function getFund(code) {\r\n    return https({\r\n        url: '/FundMNewApi/FundMNNBasicInformation',\r\n        params: {\r\n            version: '6.2',\r\n            plat: 'Android',\r\n            appType: 'ttjj',\r\n            FCODE: code,\r\n            onFundCache: 3,\r\n            keeeeeyparam: 'FCODE',\r\n            deviceid: '656c09923c567b89bb44801020bc59ab%7C%7Ciemi_tluafed_me',\r\n            igggggnoreburst: true,\r\n            product: 'EFund',\r\n            MobileKey: '656c09923c567b89bb44801020bc59ab%7C%7Ciemi_tluafed_me'\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * 批量获取基金实时数据\r\n * @param {Array} codes 基金代码\r\n * \r\n * @returns FCODE 基金代码\r\n * @returns SHORTNAME 基金名称\r\n * @returns PDATE 最新确认净值日期\r\n * @returns NAV 最新确认净值\r\n * @returns NAVCHGRT 最新确认净值涨跌比率\r\n * @returns GSZ 实时估算净值\r\n * @returns GSZZL 实时估算净值涨跌比率\r\n * @returns GZTIME 时间估算时间\r\n */\r\nexport function getFundList(codes) {\r\n    return https({\r\n        url: '/FundMNewApi/FundMNFInfo',\r\n        params: {\r\n            pageIndex: 1,\r\n            pageSize: 999,\r\n            appType: 'ttyy',\r\n            product: 'EFund',\r\n            plat: 'Android',\r\n            deviceid: '9e16077fca2fcr78ep0ltn98',\r\n            Version: 1,\r\n            Fcodes: codes || allFundCodes.join(',')\r\n        }\r\n    });\r\n}\r\n","import React from 'react';\r\n\r\nfunction getIncome(income, unit) {\r\n    if (income > 0) {\r\n        return <span className=\"income-rate positive-income\">+{income}{unit}</span>;\r\n    } else if (income < 0) {\r\n        return <span className=\"income-rate negative-income\">{income}{unit}</span>;\r\n    } else {\r\n        return <span className=\"income-rate\">0.00</span>;\r\n    }\r\n}\r\n\r\nfunction FundList(props) {\r\n    const { funds, onlyShowHave } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"list-header\">\r\n                <p>\r\n                <span className=\"income-rate\">收益率</span> | \r\n                <span className=\"income-rate\">今日预估收益</span> | \r\n                <span className=\"income-rate\">今日确认收益</span> | \r\n                </p>\r\n            </div>\r\n            {funds.filter(fund => !onlyShowHave || fund.isHave).map(fund => {\r\n                return <div className=\"\" key={fund.FCODE}>\r\n                    <p>\r\n                        {getIncome(fund.GSZZL, '%')} | \r\n                        {getIncome(fund.JRGSSY)} |\r\n                        {getIncome(fund.JRQRSY)} |\r\n                        <span className=\"fund-name\">\r\n                            <label className=\"have-tag\">{fund.isHave ? '持有' : ''}</label>\r\n                            {fund.SHORTNAME}({fund.FCODE})\r\n                        </span>\r\n                    </p>\r\n                </div>;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FundList;","import React from 'react';\r\nimport _ from 'lodash';\r\nimport dayjs from 'dayjs';\r\nimport NProgress from 'nprogress';\r\nimport * as mathjs from 'mathjs';\r\nimport { getFundList } from '../../api/eastmoney';\r\nimport { fundInvote } from '../../data/fund';\r\nimport FundList from './list';\r\n\r\n// 开市时间\r\nconst openMarketTime = `${dayjs().format('YYYY-MM-DD')} 9:00:01`;\r\n// 收市时间\r\nconst closeMarketTime = `${dayjs().format('YYYY-MM-DD')} 15:00:01`;\r\n// 轮询时间(s)\r\nconst pollingTime = 5;\r\n\r\nconst setInfo = (data) => {\r\n    window.consoleInfo = () => {\r\n        console.log('预估总市值：', data.YGZSZ);\r\n    };\r\n};\r\n\r\nconst getUpdateFlag = (value) => {\r\n    const arr = ['更新中', '更新完成'];\r\n    if (arr[value]) {\r\n        return <span class=\"red\">({arr[value]})</span>;\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nclass funDataComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDetail: false,\r\n            onlyShowHave: true,\r\n            // 0，更新中，1更新完成\r\n            updateFlag: -1,\r\n            refreshTime: '',\r\n            fundData: [],\r\n            funListData: []\r\n        };\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    async getFundListData() {\r\n        const refreshTime = dayjs().format('YYYY-MM-DD HH:mm:ss');\r\n        // 是否开市\r\n        const isCloseMarket = dayjs(refreshTime).isAfter(closeMarketTime) || dayjs(openMarketTime).isAfter(refreshTime);\r\n        \r\n        // 不在开市时间不刷新\r\n        if (this.timer && isCloseMarket) {\r\n            this.clearTimer();\r\n            return;\r\n        }\r\n\r\n        const fundListData = await getFundList();\r\n        const {\r\n            list,\r\n            updateFlag,\r\n            ZRQRZSY,\r\n            JRQRZSY,\r\n            JRGSZSY,\r\n            CCZSY\r\n        } = this.dealData(fundListData.Datas, refreshTime);\r\n\r\n        this.setState({\r\n            updateFlag,\r\n            refreshTime,\r\n            fundData: {\r\n                ZRQRZSY,\r\n                JRQRZSY,\r\n                JRGSZSY,\r\n                CCZSY\r\n            },\r\n            funListData: _.orderBy(list || [], d => (Number(d.GSZZL) + 100000), 'desc')\r\n        });\r\n        this.setTimer();\r\n    }\r\n\r\n    /**\r\n     * 计算基金实时收益情况等\r\n     * @param {Array} funds 基金实时信息\r\n     * @param {Date|String} refreshTime 刷新基金的时间\r\n     * \r\n     * @returns {Number} ZRQRZSY 昨日确认总收益\r\n     * @returns {Number} JRQRZSY 今日确认总收益\r\n     * @returns {Number} JRGSZSY 今日估算总收益\r\n     * @returns {Number} CCZSY 持仓收益\r\n     * @returns {Array} list 基金数组\r\n     */\r\n    dealData(funds = [], refreshTime) {\r\n        const obj = {\r\n            ZRQRZSY: 0,\r\n            JRQRZSY: 0,\r\n            JRGSZSY: 0,\r\n            CCZSY: 0,\r\n            updateFlag: -1\r\n        };\r\n        let updateLen = 0;\r\n        let needUpdate = 0;\r\n\r\n        let YGZSZ = 0;\r\n\r\n        obj.list = funds.map(fund => {\r\n            const currentInvote = fundInvote[fund.FCODE];\r\n            // 昨日确认总收益\r\n            let ZRQRZSY = 0;\r\n            // 实时预估收益\r\n            let JRGSSY = 0;\r\n            // 今日确认收益\r\n            let JRQRSY = 0;\r\n            // 确认持仓收益\r\n            let CCSY = 0;\r\n            // 是否持仓\r\n            let isHave = false;\r\n\r\n            if (currentInvote) {\r\n                needUpdate += 1;\r\n                const { FCCFE, FCCCBDJ } = currentInvote;\r\n                const { NAV, NAVCHGRT, GSZ, GSZZL, PDATE } = fund;\r\n                \r\n                isHave = true;\r\n                // 说明今天的净值已经更新\r\n                if (refreshTime.indexOf(PDATE) === 0 && Number(NAVCHGRT) && Number(NAV)) {\r\n                    updateLen += 1;\r\n                    JRQRSY = mathjs.round(NAVCHGRT * NAV * FCCFE / 100, 2);\r\n                } else {\r\n                    ZRQRZSY = mathjs.round(NAVCHGRT * NAV * FCCFE / 100, 2);\r\n                }\r\n                JRGSSY = mathjs.round(GSZ * GSZZL * FCCFE / 100, 2);\r\n                CCSY = mathjs.round(NAV * FCCFE - FCCCBDJ * FCCFE, 2) || 0;\r\n                obj.ZRQRZSY += Number(ZRQRZSY);\r\n                obj.JRQRZSY += Number(JRQRSY);\r\n                obj.JRGSZSY += Number(JRGSSY);\r\n                obj.CCZSY += Number(CCSY);\r\n                YGZSZ = mathjs.round(YGZSZ + NAV * FCCFE, 2);\r\n            }\r\n            return {\r\n                ...fund,\r\n                JRGSSY,\r\n                JRQRSY,\r\n                CCSY,\r\n                isHave\r\n            };\r\n        });\r\n        setInfo({\r\n            YGZSZ\r\n        });\r\n        if (updateLen === 0) {\r\n            obj.updateFlag = -1;\r\n        } else if (updateLen === needUpdate) {\r\n            obj.updateFlag = 1;\r\n        } else {\r\n            obj.updateFlag = 0;\r\n        }\r\n        obj.ZRQRZSY = mathjs.round(obj.ZRQRZSY, 2);\r\n        obj.JRQRZSY = mathjs.round(obj.JRQRZSY, 2);\r\n        obj.JRGSZSY = mathjs.round(obj.JRGSZSY, 2);\r\n        obj.CCZSY = mathjs.round(obj.CCZSY, 2);\r\n        return obj;\r\n    }\r\n\r\n    // 定时请求\r\n    setTimer() {\r\n        this.timer = setTimeout(() => {\r\n            NProgress.start();\r\n            this.getFundListData();\r\n            NProgress.done();\r\n        }, pollingTime * 1000);\r\n    }\r\n\r\n    // 清除定时器\r\n    clearTimer() {\r\n        this.timer && clearInterval(this.timer);\r\n    }\r\n\r\n    // 重置定时器：一般用于手动刷新场景\r\n    resetTimer() {\r\n        this.clearTimer();\r\n        this.setTimer();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFundListData();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    changeShowHave() {\r\n        this.setState({\r\n            onlyShowHave: !this.state.onlyShowHave\r\n        });\r\n    }\r\n\r\n    changeShowDetail() {\r\n        this.setState({\r\n            showDetail: !this.state.showDetail\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            funListData = [],\r\n            fundData = {},\r\n            refreshTime,\r\n            onlyShowHave,\r\n            updateFlag,\r\n            showDetail\r\n        } = this.state;\r\n        const fundLen = Object.keys(fundInvote).length;\r\n\r\n        return <div>\r\n            <p className=\"update-time\">更新时间：{refreshTime}</p>\r\n            <p>持仓数量：{fundLen}</p>\r\n            <p>持仓收益：{fundData.CCZSY}</p>\r\n            <p>昨日确认总收益：{fundData.ZRQRZSY}</p>\r\n            <p>今日确认总收益：{fundData.JRQRZSY}{getUpdateFlag(updateFlag)}</p>\r\n            <p>今日预估总收益：{fundData.JRGSZSY}</p>\r\n            <div className=\"operation-container\">\r\n                <button onClick={this.changeShowDetail.bind(this)}>{showDetail ? '隐藏' : '显示'}详情</button>\r\n                <button onClick={this.changeShowHave.bind(this)}>{!onlyShowHave ? '隐藏' : '显示'}未持有</button>\r\n            </div>\r\n            {showDetail && <FundList funds={funListData} onlyShowHave={onlyShowHave}></FundList>}\r\n        </div>;\r\n    }\r\n}\r\n\r\n\r\nexport default funDataComponent;","import React from 'react';\r\nimport FundData from './pages/fund/data';\r\nimport './App.css';\r\nimport 'nprogress/nprogress.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"content\">\r\n      {/* {tabPages()} */}\r\n      <FundData />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}