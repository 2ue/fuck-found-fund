{"version":3,"sources":["pages/home/index.js","utils/axios.js","data/fund/index.js","api/eastmoney.js","utils/index.js","pages/fund/list.js","pages/fund/data.jsx","pages/quantify/index.js","pages/quantify/rank/index.js","router.js","pages/mark/index.js","App.js","serviceWorker.js","index.js"],"names":["Index","className","Routers","map","r","style","width","length","key","path","replace","to","name","React","Component","axios","interceptors","request","use","config","error","Promise","reject","response","fundCodes","fundInvote","FCCFE","FCCCBDJ","PLATFORM","allFundCodes","_","uniq","Object","keys","https","baseURL","then","res","data","status","getFundList","codes","url","params","pageIndex","pageSize","appType","product","plat","deviceid","Version","Fcodes","join","count","number","dec","mathjs","getIncome","income","unit","dealFundData","funds","refreshTime","obj","ZRQRZSY","JRQRZSY","JRGSZSY","CCZSY","YGZSZ","CCZCB","updateFlag","updateLen","needUpdate","list","fund","currentInvote","FCODE","JRGSSY","JRQRSY","CCSY","CCZSZ","isHave","NAV","NAVCHGRT","GSZ","GSZZL","PDATE","indexOf","Number","JRQRSYL","CCSYL","FundList","props","onlyShowHave","showRate","sortList","onClick","bind","this","filter","SHORTNAME","openMarketTime","dayjs","format","closeMarketTime","setInfo","window","consoleInfo","console","log","getNumber","value","type","rate","funDataComponent","state","showDetail","fundData","funListData","isCloseMarket","isAfter","timer","clearTimer","fundListData","Datas","setState","setTimer","order","_order","o","l","isEmpty","orderBy","d","setTimeout","NProgress","start","getFundListData","done","pollingTime","clearInterval","alert","fundLen","ZSYL","printAll","swtichNumber","arr","getUpdateFlag","changeShowDetail","changeShowHave","date","compareData","preDate","headers","keepFundList","lostFundList","newFundList","f","code","getGSZZL","fundList","find","getFund","renderTd","concat","Quantify","h","colSpan","component","Fund","exact","children","match","responseType","allRouters","getRoutes","routes","forEach","push","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1b7acea9.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Routers from '../../router';\n\n\nfunction getStyles() {\n  return {\n    width: `${(100 / Routers.length)}%`\n  }\n}\n\nexport default class Index extends React.Component {\n  render() {\n    return (\n      <div className=\"home-container\">\n        <ul className=\"menu\">\n          {\n            Routers.map(r => <li style={getStyles()} key={r.path.replace('/', '')}><Link to={r.path}>{r.name}</Link></li>)\n          }\n        </ul>\n      </div>\n    )\n  }\n};\n","import axios from 'axios';\n\naxios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    return config;\n}, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nexport default axios;","/**\n * 需要展示的基金列表CODE\n */\nexport const fundCodes = [\n    '001679',\n    '320007',\n    '001102',\n    '001071',\n    '005963',\n    '161028',\n    '005827',\n    '161005',\n    '519712',\n    '008086',\n    '519674',\n    '000478',\n    '004069',\n    '001552',\n    '009329',\n    '003095',\n    '002510',\n    '519727',\n    '002656',\n    '007300',\n    '161725',\n    '001694',\n    '163406',\n    '001156',\n    '162605'\n];\n\n/**\n * 持仓数据\n * FCCFE: 持仓份额\n * FCCCB: 持仓成本\n * FCCCBDJ: 持仓成本单价\n * PLATFORM: 平台简称\n */\nexport const fundInvote = {\n    '001679': {\n        FCCFE: 6783.15,\n        FCCCBDJ: 1.8281,\n        PLATFORM: 'JD'\n    },\n    '001102': {\n        FCCFE: 5056.60,\n        FCCCBDJ: 3.4064,\n        PLATFORM: 'TTJJ'\n    },\n    '001156': {\n        FCCFE: 8128.31,\n        FCCCBDJ: 2.5337,\n        PLATFORM: 'TTJJ'\n    },\n    '005969': {\n        FCCFE: 3112.99,\n        FCCCBDJ: 3.2834,\n        PLATFORM: 'TTJJ'\n    },\n    '005827': {\n        FCCFE: 4975.77,\n        FCCCBDJ: 2.6273,\n        PLATFORM: 'TTJJ'\n    },\n    '161005': {\n        FCCFE: 2738.66,\n        FCCCBDJ: 3.2479,\n        PLATFORM: 'TTJJ'\n    },\n    '161725': {\n        FCCFE: 9963.58,\n        FCCCBDJ: 1.2814,\n        PLATFORM: 'MYCF'\n    },\n    '163406': {\n        FCCFE: 7216.12,\n        FCCCBDJ: 2.0728,\n        PLATFORM: 'MYCF'\n    },\n    '162605': {\n        FCCFE: 5177.59,\n        FCCCBDJ: 3.6346,\n        PLATFORM: 'MYCF'\n    },\n    '005911': {\n        FCCFE: 959.56,\n        FCCCBDJ: 3.4912,\n        PLATFORM: 'MYCF'\n    },\n    '003095': {\n        FCCFE: 4185.51,\n        FCCCBDJ: 3.2482,\n        PLATFORM: 'MYCF'\n    },\n    '001875': {\n        FCCFE: 3306.25,\n        FCCCBDJ: 2.8129,\n        PLATFORM: 'MYCF'\n    },\n    '001837': {\n        FCCFE: 565.83,\n        FCCCBDJ: 2.2595,\n        PLATFORM: 'MYCF'\n    },\n    '002656': {\n        FCCFE: 9543.07,\n        FCCCBDJ: 1.3444,\n        PLATFORM: 'MYCF'\n    },\n    '004069': {\n        FCCFE: 11028.47,\n        FCCCBDJ: 1.2418,\n        PLATFORM: 'MYCF'\n    },\n    '008086': {\n        FCCFE: 8840.87,\n        FCCCBDJ: 1.2414,\n        PLATFORM: 'MYCF'\n    },\n    '007300': {\n        FCCFE: 4441.96,\n        FCCCBDJ: 2.1547,\n        PLATFORM: 'MYCF'\n    },\n    '009329': {\n        FCCFE: 10094.45,\n        FCCCBDJ: 1.4315,\n        PLATFORM: 'MYCF'\n    },\n    '519727': {\n        FCCFE: 3761.86,\n        FCCCBDJ: 2.2908,\n        PLATFORM: 'MYCF'\n    },\n};\n","/**\n * 基于https://fundmobapi.eastmoney.com的接口\n */\n\nimport axios from '../utils/axios';\nimport _ from 'lodash';\nimport { fundCodes, fundInvote } from '../data/fund/index';\n\nconst allFundCodes = (() => {\n    return _.uniq([\n        ...Object.keys(fundInvote),\n        ...fundCodes\n    ]);\n})();\n\nfunction https(config) {\n    return axios({\n        ...config,\n        baseURL: 'https://fundmobapi.eastmoney.com/'\n    }).then(res => {\n        const { data, status } = res;\n        if (status === 200) return data;\n    });\n}\n\n/**\n * 获取基金历史净值\n * @param {String|Number} code 基金代码\n * \n * @returns FCODE 基金代码\n * @returns SHORTNAME 基金名称\n * @returns PDATE 最新确认净值日期\n * @returns NAV 最新确认净值\n * @returns NAVCHGRT 最新确认净值涨跌比率\n * @returns GSZ 实时估算净值\n * @returns GSZZL 实时估算净值涨跌比率\n * @returns GZTIME 时间估算时间\n */\nexport function getFund(code) {\n    return https({\n        url: '/FundMNewApi/FundMNNBasicInformation',\n        params: {\n            version: '6.2',\n            plat: 'Android',\n            appType: 'ttjj',\n            FCODE: code,\n            onFundCache: 3,\n            keeeeeyparam: 'FCODE',\n            deviceid: '656c09923c567b89bb44801020bc59ab%7C%7Ciemi_tluafed_me',\n            igggggnoreburst: true,\n            product: 'EFund',\n            MobileKey: '656c09923c567b89bb44801020bc59ab%7C%7Ciemi_tluafed_me'\n        }\n    });\n}\n\n/**\n * 批量获取基金实时数据\n * @param {Array} codes 基金代码\n * \n * @returns FCODE 基金代码\n * @returns SHORTNAME 基金名称\n * @returns PDATE 最新确认净值日期\n * @returns NAV 最新确认净值\n * @returns NAVCHGRT 最新确认净值涨跌比率\n * @returns GSZ 实时估算净值\n * @returns GSZZL 实时估算净值涨跌比率\n * @returns GZTIME 时间估算时间\n */\nexport function getFundList(codes) {\n    return https({\n        url: '/FundMNewApi/FundMNFInfo',\n        params: {\n            pageIndex: 1,\n            pageSize: 999,\n            appType: 'ttyy',\n            product: 'EFund',\n            plat: 'Android',\n            deviceid: '9e16077fca2fcr78ep0ltn98',\n            Version: 1,\n            Fcodes: codes || allFundCodes.join(',')\n        }\n    });\n}\n","\nimport React from 'react';\nimport * as mathjs from 'mathjs';\n\nexport function  count(number, dec = 2) {\n    return mathjs.round(number, dec);\n}\n\nexport function getIncome(income, unit) {\n    if (income > 0) {\n        return <span className=\"income-rate positive-income\">+{income}{unit}</span>;\n    } else if (income < 0) {\n        return <span className=\"income-rate negative-income\">{income}{unit}</span>;\n    } else {\n        return <span className=\"income-rate\">0.00</span>;\n    }\n}\n\n/**\n     * 计算基金实时收益情况等\n     * @param {Array} funds 基金实时信息\n     * @param {Date|String} refreshTime 刷新基金的时间\n     * \n     * @returns {Number} ZRQRZSY 昨日确认总收益\n     * @returns {Number} JRQRZSY 今日确认总收益\n     * @returns {Number} JRGSZSY 今日估算总收益\n     * @returns {Number} CCZSY 持仓收益\n     * @returns {Array} list 基金数组\n     */\n export function dealFundData(funds = [], refreshTime, fundInvote = {}) {\n    const obj = {\n        ZRQRZSY: 0,\n        JRQRZSY: 0,\n        JRGSZSY: 0,\n        CCZSY: 0,\n        // 预估总市值\n        YGZSZ: 0,\n        // 持仓总成本\n        CCZCB: 0,\n        updateFlag: -1\n    };\n\n    let updateLen = 0;\n    let needUpdate = 0;\n\n    obj.list = funds.map(fund => {\n        const currentInvote = fundInvote[fund.FCODE];\n        // 昨日确认总收益\n        let ZRQRZSY = 0;\n        // 实时预估收益\n        let JRGSSY = 0;\n        // 今日确认收益\n        let JRQRSY = 0;\n        // 确认持仓收益\n        let CCSY = 0;\n        // 持仓总成本: 投入的本金\n        let CCZCB = 0;\n        // 持仓总市值： CCSY+CCZCB\n        let CCZSZ = 0;\n        // 是否持仓\n        let isHave = false;\n\n        if (currentInvote) {\n            needUpdate += 1;\n            const { FCCFE, FCCCBDJ } = currentInvote;\n            const { NAV, NAVCHGRT, GSZ, GSZZL, PDATE } = fund;\n            \n            isHave = true;\n            CCZCB = count(FCCCBDJ * FCCFE);\n            CCZSZ = count(NAV * FCCFE);\n            // 说明今天的净值已经更新\n            if (refreshTime.indexOf(PDATE) === 0 && Number(NAVCHGRT) && Number(NAV)) {\n                updateLen += 1;\n                JRQRSY = count(NAVCHGRT * CCZSZ / 100);\n            } else {\n                ZRQRZSY = count(NAVCHGRT * CCZSZ / 100);\n            }\n            JRGSSY = count(GSZ * GSZZL * FCCFE / 100);\n            CCSY = count(CCZSZ - CCZCB) || 0;\n            obj.ZRQRZSY += Number(ZRQRZSY);\n            obj.JRQRZSY += Number(JRQRSY);\n            obj.JRGSZSY += Number(JRGSSY);\n            obj.CCZSY += Number(CCSY);\n            obj.YGZSZ = count(obj.YGZSZ + CCZSZ);\n            obj.CCZCB = count(obj.CCZCB + CCZCB);\n        }\n        return {\n            ...fund,\n            JRGSSY,\n            JRQRSY,\n            JRQRSYL: count(JRQRSY / CCZSZ * 100),\n            CCSY,\n            CCSYL: count(CCSY / CCZCB * 100),\n            CCZCB,\n            CCZSZ,\n            isHave\n        };\n    });\n    if (updateLen === 0) {\n        obj.updateFlag = -1;\n    } else if (updateLen === needUpdate) {\n        obj.updateFlag = 1;\n    } else {\n        obj.updateFlag = 0;\n    }\n    obj.ZRQRZSY = count(obj.ZRQRZSY);\n    obj.JRQRZSY = count(obj.JRQRZSY);\n    obj.JRGSZSY = count(obj.JRGSZSY);\n    obj.CCZSY = count(obj.CCZSY);\n    return obj;\n}","import React from 'react';\nimport { getIncome } from '../../utils';\n\nfunction FundList(props) {\n    const { funds, onlyShowHave, showRate, updateFlag, sortList } = props;\n    return (\n        <div className=\"list-container\">\n            <div className=\"list-content\">\n                <div className=\"list-header\">\n                    <p>\n                        <span className=\"income-rate\" onClick={sortList.bind(this, null, 'GSZZL')}>今日预估收益率</span>\n                        {!showRate ? <span className=\"income-rate\" onClick={sortList.bind(this, null, 'JRGSSY')}>今日预估收益</span> : ''}\n                        {updateFlag !== -1 ? <span className=\"income-rate\" onClick={sortList.bind(this, null, 'JRQRSYL')}>今日确认收益率</span> : ''}\n                        {updateFlag !== -1 && !showRate ? <span className=\"income-rate\" onClick={sortList.bind(this, null, 'JRQRSY')}>今日确认收益</span> : ''}\n                        <span className=\"income-rate\" onClick={sortList.bind(this, null, 'CCSYL')}>持仓收益率</span>\n                        {!showRate ? <span className=\"income-rate\" onClick={sortList.bind(this, null, 'CCSY')}>持仓收益</span> : ''}\n                    </p>\n                </div>\n                {funds.filter(fund => !onlyShowHave || fund.isHave).map(fund => {\n                    return <div className=\"\" key={fund.FCODE}>\n                        <p>\n                            {getIncome(fund.GSZZL, '%')}\n                            {!showRate ? getIncome(fund.JRGSSY) : ''}\n                            {updateFlag !== -1 ? getIncome(fund.JRQRSYL, '%') : ''}\n                            {updateFlag !== -1 && !showRate ? getIncome(fund.JRQRSY) : ''}\n                            {getIncome(fund.CCSYL, '%')}\n                            {!showRate ? getIncome(fund.CCSY) : ''}\n                            <span className=\"fund-name\">\n                                <label className=\"have-tag\">{fund.isHave ? '持有' : ''}</label>\n                                {fund.SHORTNAME}({fund.FCODE})\n                            </span>\n                        </p>\n                    </div>;\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default FundList;","import React from 'react';\nimport _ from 'lodash';\nimport dayjs from 'dayjs';\nimport NProgress from 'nprogress';\nimport { getFundList } from '../../api/eastmoney';\nimport { fundInvote } from '../../data/fund/index';\nimport FundList from './list';\nimport { count, dealFundData } from '../../utils';\n\n// 开市时间\nconst openMarketTime = `${dayjs().format('YYYY-MM-DD')} 9:00:01`;\n// 收市时间\nconst closeMarketTime = `${dayjs().format('YYYY-MM-DD')} 15:00:01`;\n// 轮询时间(s)\nconst pollingTime = 5;\n\nconst setInfo = (data) => {\n    window.consoleInfo = () => {\n        console.log('持仓总成本：', data.CCZCB);\n        console.log('预估总市值：', data.YGZSZ);\n    };\n};\n\nconst getUpdateFlag = (value) => {\n    const arr = ['更新中', '更新完成'];\n    if (arr[value]) {\n        return <span className=\"red\">({arr[value]})</span>;\n    } else {\n        return '';\n    }\n}\n\nfunction getNumber(value, type, data) {\n    if (type) {\n        const rate = count(value / data * 100);\n        return `${rate}%`;\n    }\n    return value;\n}\n\nclass funDataComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDetail: false,\n            onlyShowHave: true,\n            // 0，更新中，1更新完成\n            updateFlag: -1,\n            refreshTime: '',\n            fundData: [],\n            funListData: [],\n            showRate: true\n        };\n    }\n\n    /**\n     * \n     */\n    async getFundListData() {\n        const refreshTime = dayjs().format('YYYY-MM-DD HH:mm:ss');\n        // 是否开市\n        const isCloseMarket = dayjs(refreshTime).isAfter(closeMarketTime) || dayjs(openMarketTime).isAfter(refreshTime);\n        \n        // 不在开市时间不刷新\n        if (this.timer && isCloseMarket) {\n            this.clearTimer();\n            return;\n        }\n\n        const fundListData = await getFundList();\n        const data = dealFundData(fundListData.Datas, refreshTime, fundInvote);\n        const {\n            list,\n            updateFlag,\n            ...fundData\n        } = data;\n        setInfo(data);\n\n        this.setState({\n            updateFlag,\n            refreshTime,\n            fundData\n        });\n        this.sortList(list, 'GSZZL', this.state.GSZZL || 'desc');\n        this.setTimer();\n    }\n    sortList(list, key, order) {\n        const _order = this.state[key];\n        const o =  order || (_order === 'desc' ? 'asc' : 'desc');\n        let l = list;\n        if (_.isEmpty(l)) {\n            l = this.state.funListData;\n        }\n        this.setState({\n            [key]: o,\n            funListData: _.orderBy(l || [], d => (Number(d[key]) + 100000), o)\n        });\n    }\n\n    // 定时请求\n    setTimer() {\n        this.timer = setTimeout(() => {\n            NProgress.start();\n            this.getFundListData();\n            NProgress.done();\n        }, pollingTime * 1000);\n    }\n\n    // 清除定时器\n    clearTimer() {\n        this.timer && clearInterval(this.timer);\n    }\n\n    // 重置定时器：一般用于手动刷新场景\n    resetTimer() {\n        this.clearTimer();\n        this.setTimer();\n    }\n\n    componentDidMount() {\n        this.getFundListData();\n    }\n\n    componentWillUnmount() {\n        this.clearTimer();\n    }\n\n    changeShowHave() {\n        this.setState({\n            onlyShowHave: !this.state.onlyShowHave\n        });\n    }\n\n    changeShowDetail() {\n        this.setState({\n            showDetail: !this.state.showDetail\n        });\n    }\n    printAll() {\n        const {\n            CCZCB,\n            YGZSZ\n        } = this.state.fundData;\n        window.consoleInfo();\n        window.alert(`持仓总成本：${CCZCB}<br/>预估总市值：${YGZSZ}`);\n    }\n    \n    swtichNumber() {\n        this.setState({\n            showRate: !this.state.showRate\n        });\n    }\n\n    render() {\n        const {\n            funListData = [],\n            fundData = {},\n            refreshTime,\n            onlyShowHave,\n            updateFlag,\n            showDetail,\n            showRate\n        } = this.state;\n        const {\n            CCZCB,\n            CCZSY,\n            YGZSZ,\n            ZRQRZSY,\n            JRQRZSY,\n            JRGSZSY\n        } = fundData;\n        const fundLen = Object.keys(fundInvote).length;\n\n        const ZSYL = count(CCZSY / CCZCB * 100, 2);\n\n        return <div className=\"fund-container\">\n            <button className=\"total-all\" onClick={this.printAll.bind(this)}>总计</button>\n            <button className=\"total-all swtich-number\" onClick={this.swtichNumber.bind(this)}>总计</button>\n            <p className=\"update-time\">更新时间：{refreshTime}</p>\n            <p>持仓数量：{fundLen}</p>\n            <p>持仓收益：{showRate ? `${ZSYL}%` : CCZSY}</p>\n            <p>昨日确认总收益：{getNumber(ZRQRZSY, showRate, YGZSZ)}</p>\n            <p>今日确认总收益：{getNumber(JRQRZSY, showRate, YGZSZ)}{getUpdateFlag(updateFlag)}</p>\n            <p>今日预估总收益：{getNumber(JRGSZSY, showRate, YGZSZ)}</p>\n            <div className=\"operation-container\">\n                <button onClick={this.changeShowDetail.bind(this)}>{showDetail ? '隐藏' : '显示'}详情</button>\n                <button onClick={this.changeShowHave.bind(this)}>{!onlyShowHave ? '隐藏' : '显示'}未持有</button>\n            </div>\n            {showDetail && <FundList funds={funListData} onlyShowHave={onlyShowHave} showRate={showRate} updateFlag={updateFlag} sortList={this.sortList.bind(this)}></FundList>}\n        </div>;\n    }\n}\n\n\nexport default funDataComponent;","import React from 'react';\nimport dayjs from 'dayjs';\nimport './index.css';\nimport { getFundList } from '../../api/eastmoney';\nimport compareData from '../../data/quantify/compare.json';\nimport { dealFundData, getIncome } from '../../utils';\n\nconst {\n  date,\n  preDate,\n  keys,\n  headers,\n  keepFundList,\n  lostFundList,\n  newFundList\n} = compareData;\n\nconst codes = [\n  ...keepFundList,\n  ...lostFundList,\n  ...newFundList,\n].map(f => f.code).join(',');\n\nconst getFund = (fundList, code) => {\n  return fundList.find(f => f.FCODE === code);\n}\n\nconst getGSZZL = (fundList, code) => {\n  const fund = getFund(fundList, code) || {};\n  return <td  key={`GSZZL${code}`}>{ getIncome(fund.GSZZL, '%') }</td>\n}\n\nconst renderTd = (data, fundList) => {\n  return keys.map(key => <td key={`${data[key]}${data.code}`}>{data[key]}</td>).concat([getGSZZL(fundList, data.code)]);\n};\n\nconst refreshTime = dayjs().format('YYYY-MM-DD HH:mm:ss');\n\nexport default class Quantify extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fundList: []\n    };\n  }\n\n  async getFundListData() {\n    const fundData = await getFundList(codes);\n    const data = dealFundData(fundData.Datas, refreshTime);\n    this.setState({\n      'fundList': data.list\n    });\n  }\n\n  componentDidMount() {\n    this.getFundListData();\n  }\n\n  render() {\n    const { fundList } = this.state;\n    return (\n      <div className=\"quantify-container\">\n        <p>本期榜单更新({date}与{preDate})：</p>\n        <br></br>\n        <table>\n          <thead>\n            <tr>\n              { headers.map(h => <td key={h.key}>{ h.name }</td>) }\n              <td key=\"GSSL\">今日预估收益率</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"fund-list-title\"><td colSpan={keys.length}>本期在榜基金（{date}）</td></tr>\n            {\n              keepFundList.map(f => <tr key={f.code}>{renderTd(f, fundList)}</tr>)\n            }\n            <tr className=\"fund-list-title\"><td colSpan={keys.length}>本期落榜基金（{preDate}）</td></tr>\n            {\n              lostFundList.map(f => <tr key={f.code}>{renderTd(f, fundList)}</tr>)\n            }\n            <tr className=\"fund-list-title\"><td colSpan={keys.length}>本期上榜基金（{date}）</td></tr>\n            {\n              newFundList.map(f => <tr key={f.code}>{renderTd(f, fundList)}</tr>)\n            }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport '../index.css';\nimport { getFundList } from '../../../api/eastmoney';\nimport compareData from '../../../data/quantify/compare.json';\nimport { dealFundData, getIncome } from '../../../utils';\nimport axios from 'axios';\n\nconst {\n  date,\n  keys,\n  headers,\n  keepFundList,\n  lostFundList,\n  newFundList\n} = compareData;\n\nconst codes = [\n  ...keepFundList,\n  ...lostFundList,\n  ...newFundList,\n].map(f => f.code).join(',');\n\nconst getFund = (fundList, code) => {\n  return fundList.find(f => f.FCODE === code);\n}\n\nconst getGSZZL = (fundList, code) => {\n  const fund = getFund(fundList, code) || {};\n  return <td  key=\"GSSL\">{ getIncome(fund.GSZZL, '%') }</td>\n}\n\nconst renderTd = (data, fundList) => {\n  return keys.map(key => <td key={data[key]}>{data[key]}</td>).concat([getGSZZL(fundList, data.code)]);\n};\n\nconst refreshTime = dayjs().format('YYYY-MM-DD HH:mm:ss');\n\nexport default class QuantifyRank extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fundList: []\n    };\n  }\n\n  async getFundListData() {\n    const fundData = await getFundList(codes);\n    const data = dealFundData(fundData.Datas, refreshTime);\n    this.setState({\n      'fundList': data.list\n    });\n  }\n\n  componentDidMount() {\n    const { date } = this.props.match.params;\n    axios({\n      url: `../../../data/quantify/${date}.json`,\n      responseType: 'json'\n    }).then(res => {\n      console.log('dd', res);\n    })\n    this.getFundListData();\n  }\n\n  render() {\n    const { fundList } = this.state;\n    return (\n      <div className=\"quantify-container\">\n        <p>本期榜单更新({date})：</p>\n        <br></br>\n        <table>\n          <thead>\n            <tr>\n              { headers.map(h => <td key={h.key}>{ h.name }</td>) }\n              <td key=\"GSSL\">今日预估收益率</td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"fund-list-title\"><td colSpan={keys.length}>本期在榜基金</td></tr>\n            {\n              keepFundList.map(f => <tr key={f.code}>{renderTd(f, fundList)}</tr>)\n            }\n            <tr className=\"fund-list-title\"><td colSpan={keys.length}>落榜基金</td></tr>\n            {\n              lostFundList.map(f => <tr key={f.code}>{renderTd(f, fundList)}</tr>)\n            }\n            <tr className=\"fund-list-title\"><td colSpan={keys.length}>上榜基金</td></tr>\n            {\n              newFundList.map(f => <tr key={f.code}>{renderTd(f, fundList)}</tr>)\n            }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n};\n","import Index from './pages/home/index';\nimport Fund from './pages/fund/data';\nimport Quantify from './pages/quantify';\nimport QuantifyRank from './pages/quantify/rank';\nimport Mark from './pages/mark';\n\nexport default [\n  {\n    name: '首页',\n    path: '/',\n    component: Index\n  },\n  {\n    name: '持仓',\n    path: '/fund',\n    component: Fund\n  },\n  {\n    name: '量化策略',\n    path: '/quantify',\n    component: Quantify,\n    exact: true,\n    children: [\n      {\n        name: '量化策略往期排行',\n        path: '/quantify/rank/:date',\n        component: QuantifyRank,\n      }\n    ]\n  },\n  {\n    name: '自选',\n    path: '/mark',\n    component: Mark\n  }\n];\n","import React from 'react';\n\nexport default class Quantify extends React.Component {\n  render() {\n    return (\n      <div>\n        自选\n      </div>\n    )\n  }\n};\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport 'nprogress/nprogress.css';\nimport Routers from './router';\n\nconst allRouters = [];\n\nfunction getRoutes(routes) {\n  routes.forEach(r => {\n    allRouters.push(r);\n    if (r.children) {\n      getRoutes(r.children);\n    };\n  });\n}\n\ngetRoutes(Routers);\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        {\n          allRouters.map(r => <Route path={r.path} component={r.component} key={r.path} exact={r.exact}></Route>)\n        }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}